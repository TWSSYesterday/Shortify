/**
 * 
 */
package com.nullblock.vemacs.ShortifyTests;

import static org.junit.Assert.*;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.Properties;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import com.nullblock.vemacs.Shortify.*;

/**
 * @author tux-amd64
 * 
 */
public class UrlShortenerTest {

	private Shortener shortener;
	private Properties config;

	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		config = new Properties();
		try {
			config.load(new FileInputStream("ShortifyTests.properties"));
		} catch (FileNotFoundException e) {
			System.out
					.println("Couldn't load ShortifyTests.properties, creating...");
			config.put("googAPI", "none");
			config.put("bitlyUSER", "none");
			config.put("bitlyAPI", "none");
			config.put("yourlsURI", "none");
			config.put("yourlsUSER", "none");
			config.put("yourlsPASS", "none");
			try {
				config.store(new FileOutputStream("ShortifyTests.properties"),
						"Generated by Shortify test unit");
			} catch (IOException e1) {
				System.out
						.println("Couldn't load ShortifyTests.properties due to other I/O error:");
				e1.printStackTrace();
				return;
			}
			System.out
					.println("Created. Edit this file to test other URL shorteners.");
			return;
		} catch (IOException e) {
			System.out
					.println("Couldn't load ShortifyTests.properties due to other I/O error:");
			e.printStackTrace();
			return;
		}
	}

	/**
	 * @throws java.lang.Exception
	 */
	@After
	public void tearDown() throws Exception {
	}

	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Test
	public void noConfigurationTest() throws InstantiationException,
			IllegalAccessException, IllegalArgumentException,
			InvocationTargetException, NoSuchMethodException, SecurityException {
		// For each URL shortener supported without special configuration,
		// attempt to shorten the BukkitDev page.
		System.out.println("---- No special configuration shorteners");
		Class[] shorteners = { ShortenerIsGd.class, ShortenerTinyUrl.class,
				ShortenerTurlCa.class };
		for (int i = 0; i < shorteners.length; i++) {
			// Attempt to shorten
			shortener = (Shortener) shorteners[i].getConstructor()
					.newInstance();
			doShortenerTest();
		}
		// Now test URL shorteners with required configuration
		// We'll be reading from a .properties file
		System.out.println("---- Specially configured shorteners");
	}

	@Test
	public void bitLyTest() {
		System.out.println("ShortenerBitLy:");
		String bu = config.getProperty("bitlyUSER", "none");
		String ba = config.getProperty("bitlyAPI", "none");
		if (bu.equals("none")) {
			System.out.println("No bit.ly user specified.");
			return;
		}
		if (ba.equals("none")) {
			System.out.println("No bit.ly API key specified.");
			return;
		}
		shortener = new ShortenerBitLy(bu, ba);
		doShortenerTest();
	}

	@Test
	public void gooGlTest() {
		System.out.println("ShortenerGooGl:");
		String ga = config.getProperty("googAPI", "none");
		if (ga.equals("none")) {
			System.out.println("No goo.gl API key specified.");
			return;
		}
		shortener = new ShortenerGooGl(ga);
		doShortenerTest();
	}

	@Test
	public void yourlsTest() {
		System.out.println("ShortenerYourls:");
		String yur = config.getProperty("yourlsURI", "none");
		String yu = config.getProperty("yourlsUSER", "none");
		String yp = config.getProperty("yourlsPASS", "none");
		if (yur.equals("none")) {
			System.out.println("No YOURLS API URL specified.");
			return;
		}
		if (yu.equals("none")) {
			System.out.println("No YOURLS username specified.");
			return;
		}
		if (yp.equals("none")) {
			System.out.println("No YOURLS password specified.");
			return;
		}
		shortener = new ShortenerYourls(yur, yu, yp);
		doShortenerTest();
	}

	private void doShortenerTest() {
		try {
			System.out
					.println("Shortener "
							+ shortener.getClass().getName()
							+ " (no encoding): "
							+ shortener
									.getShortenedUrl("http://dev.bukkit.org/server-mods/shortify/"));
			System.out
					.println("Shortener "
							+ shortener.getClass().getName()
							+ " (with encoding): "
							+ shortener
									.getShortenedUrl("http://dev.bukkit.org/server-mods/shortify/#encodingtest"));
		} catch (ShortifyException e) {
			fail("Shortener " + shortener.getClass().getName()
					+ " returned an error: " + e.getMessage());
		}
	}
	
	
}
